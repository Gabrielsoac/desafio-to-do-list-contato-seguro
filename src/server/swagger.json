{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Endpoint para verificar a saúde da aplicação. Ideal para healthy check com Docker Compose.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Aplicação está saudável"
          }
        }
      }
    },
    "/task": {
      "post": {
        "summary": "Criação de Tarefa",
        "description": "Endpoint para criar uma nova tarefa:   Sobre os dados:  - title é obrigatório  - description é optional, caso não seja informado, será retornado como uma string vazia  - user recebe o ID do usuário no padrão do mongodb com 24 caracterers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "title",
                "user"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "O título da tarefa. Este campo é obrigatório.",
                  "example": "Dormir"
                },
                "description": {
                  "type": "string",
                  "description": "A descrição da tarefa. Este campo é opcional e será uma string vazia se não for fornecido.",
                  "example": "Dormir 22:30 todos os dias"
                },
                "user": {
                  "type": "string",
                  "description": "O ID do usuário. Deve ser uma string de 24 caracteres.",
                  "minLength": 24,
                  "maxLength": 24,
                  "example": "67a80a413605da57c732366d"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tarefa criada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67a8ea014f6913d2bef8ea81"
                },
                "title": {
                  "type": "string",
                  "example": "Dormir"
                },
                "description": {
                  "type": "string",
                  "example": "Dormir 22:30 todos os dias"
                },
                "status": {
                  "type": "string",
                  "example": "pending"
                },
                "userID": {
                  "type": "string",
                  "example": "67a80a413605da57c732366d"
                },
                "createdAt": {
                  "type": "string",
                  "example": "09 de fevereiro de 2025 às 14:46:41"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "09 de fevereiro de 2025 às 14:46:41"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Usuário não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar Tarefas",
        "description": "Endpoint para listar todas as tarefas criadas. Retorna um 200 OK se bem-sucedido ou um 500 Internal Server Error em caso de falha.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Tarefas listadas com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "67a8af9aa432783b8f0c680b"
                      },
                      "title": {
                        "type": "string",
                        "example": "Fazer exercícios"
                      },
                      "description": {
                        "type": "string",
                        "example": "Caminhada de 30 minutos"
                      },
                      "status": {
                        "type": "string",
                        "example": "completed"
                      },
                      "userID": {
                        "type": "string",
                        "example": "67a80a413605da57c732366d"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "09 de fevereiro de 2025 às 10:37:30"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "09 de fevereiro de 2025 às 10:37:30"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/task/{id}": {
      "delete": {
        "summary": "Exclusão de Task",
        "description": "Endpoint para excluir uma task específica pelo ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "O ID da task a ser excluída."
          }
        ],
        "responses": {
          "200": {
            "description": "Task excluída com sucesso"
          },
          "404": {
            "description": "Task não encontrada",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Task não encontrada"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualização de Task",
        "description": "Endpoint para atualizar uma task específica pelo ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "O ID da task a ser atualizada."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "O novo título da task.",
                  "example": "Jogar bola"
                },
                "description": {
                  "type": "string",
                  "description": "A nova descrição da task. Este campo é opcional e será uma string vazia se não for fornecido.",
                  "example": "Com os amigos"
                },
                "status": {
                  "type": "string",
                  "description": "O novo status da task (pending, in_progress, completed).",
                  "example": "in_progress"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task atualizada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67a8ac8b31f335f784a9429b"
                },
                "title": {
                  "type": "string",
                  "example": "Jogar bola"
                },
                "description": {
                  "type": "string",
                  "example": "Com os amigos"
                },
                "status": {
                  "type": "string",
                  "example": "in_progress"
                },
                "userID": {
                  "type": "string",
                  "example": "67a80a413605da57c732366d"
                },
                "createdAt": {
                  "type": "string",
                  "example": "09 de fevereiro de 2025 às 10:24:27"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "09 de fevereiro de 2025 às 10:37:42"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Task não encontrada",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Task não encontrada"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/task/user/{id}": {
      "get": {
        "summary": "Listagem de Tasks por Usuário",
        "description": "Endpoint para listar todas as tasks de um usuário específico pelo ID do usuário.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "O ID do usuário cujas tasks serão listadas."
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks do usuário listadas com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "67a8f686cb56b17a95994842"
                      },
                      "title": {
                        "type": "string",
                        "example": "Dormir"
                      },
                      "description": {
                        "type": "string",
                        "example": "Dormir 22:30 todos os dias"
                      },
                      "status": {
                        "type": "string",
                        "example": "pending"
                      },
                      "userID": {
                        "type": "string",
                        "example": "67a8f680cb56b17a95994840"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "09 de fevereiro de 2025 às 15:40:06"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "09 de fevereiro de 2025 às 15:40:06"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "usuário não encontrado"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Criação de Usuário",
        "description": "Endpoint para criar um novo usuário.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "O nome completo do usuário.",
                  "example": "FULANO DE TAL"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "O endereço de email do usuário.",
                  "example": "fuladodetal@gmail.com"
                },
                "password": {
                  "type": "string",
                  "description": "A senha do usuário. Precisa ter pelo menos 8 dígitos, 1 caractere especial, 1 letra maiúscula e 1 letra minúscula.",
                  "minLength": 8,
                  "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z0-9]).{8,}$",
                  "example": "Sa192921@"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67a8faa79f0e98997b542dc2"
                },
                "name": {
                  "type": "string",
                  "example": "FULANO DE TAL"
                },
                "email": {
                  "type": "string",
                  "example": "fuladodetal@gmail.com"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "headers": {
              "location": {
                "description": "URL do novo recurso criado",
                "schema": {
                  "type": "string",
                  "example": "/user/67a8faa79f0e98997b542dc2"
                }
              }
            }
          },
          "400": {
            "description": "Usuário com este email já existe",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Usuário com este email já existe"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listagem de Usuários",
        "description": "Endpoint para listar todos os usuários cadastrados.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Usuários listados com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "67a91072118489d5e95ef2d7"
                  },
                  "name": {
                    "type": "string",
                    "example": "Fulano da Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "fulanodasilva@gmail.com"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Obter Usuário",
        "description": "Endpoint para obter detalhes de um usuário específico pelo ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "O ID do usuário cujos detalhes serão obtidos."
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do usuário obtidos com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67a8faa79f0e98997b542dc2"
                },
                "name": {
                  "type": "string",
                  "example": "FULANO DE TAL"
                },
                "email": {
                  "type": "string",
                  "example": "fuladodetal@gmail.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "usuário não encontrado"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualização de Usuário",
        "description": "Endpoint para atualizar um usuário específico pelo ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "O ID do usuário a ser atualizado."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "O nome completo do usuário.",
                  "example": "Fulano da Silva"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "O endereço de email do usuário.",
                  "example": "fulanoxyz@gmail.com"
                },
                "password": {
                  "type": "string",
                  "description": "A senha do usuário. Precisa ter pelo menos 8 dígitos, 1 caractere especial, 1 letra maiúscula e 1 letra minúscula.",
                  "minLength": 8,
                  "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z0-9]).{8,}$",
                  "example": "G12345653fsa@"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "67a91072118489d5e95ef2d7"
                },
                "name": {
                  "type": "string",
                  "example": "Fulano da Silva"
                },
                "email": {
                  "type": "string",
                  "example": "fulanoxyz@gmail.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Usuário com este email já existe",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "usuário com este email já existe"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "usuário não encontrado"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Exclusão de Usuário",
        "description": "Endpoint para excluir um usuário específico pelo ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "O ID do usuário a ser excluído."
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "No Content"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Usuário não encontrado"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL SERVER ERROR"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}